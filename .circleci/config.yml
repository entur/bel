version: 2.1

orbs:
  docker-publish: circleci/docker-publish@0.1.7
  node: circleci/node@1.1.6

references:
  workspace_root: &workspace_root /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

aliases:
- &test
  name: Test
  command: npm run test
- &build
  name: Build
  command: npm run build
- &GCP-auth
  name: GCP Authenticate
  command: |
    echo 'export GCLOUD_SERVICE_KEY="$GCLOUD_SERVICE_KEY"' >> $BASH_ENV
    /tools/gcp_authenticate.sh
- &docker-login
  name: Docker login
  command: |
    docker login -u _json_key -p"$DOCKER_PASSWORD" https://eu.gcr.io
- &docker-build-and-push
  name: Docker build and push
  command: |
    echo 'export CIRCLE_PROJECT_REPONAME="$CIRCLE_PROJECT_REPONAME"' >> $BASH_ENV
    echo 'export VERSION="$VERSION"' >> $BASH_ENV
    IMAGE="eu.gcr.io/entur-system-1287/${CIRCLE_PROJECT_REPONAME}"
    docker build -t ${IMAGE} .
    docker tag "${IMAGE}" "${IMAGE}":"${VERSION}"
    docker push "${IMAGE}"
- &tag-git-version
  name: Tag git commit with build version and push to github
  command: |
    git config --global user.email "circleci@entur.no"
    git config --global user.name "circleci"
    git tag $VERSION
    git push origin $VERSION
- &create-image-version
  name: Create new image version and store to env var and as file in workspace
  command: |
    echo "export VERSION=$CIRCLE_BRANCH-v$CIRCLE_BUILD_NUM-$(echo -n $CIRCLE_SHA1 | tail -c 8)"  >> $BASH_ENV
    echo "$CIRCLE_BRANCH-v$CIRCLE_BUILD_NUM-$(echo -n $CIRCLE_SHA1 | tail -c 8)" > version
    cp ./version /tmp/workspace
- &read-image-version
  name: Read new image version from workspace
  command: |
    echo "export VERSION=$(cat /tmp/workspace/version)" >> $BASH_ENV

executors:
    node:
      docker:
        - image: mpde(d)
          auth:
            username: _json_key
            password: $DOCKER_PASSWORD

jobs:
  build:
    executor:
      name: node/default
      tag: '14.16.1'
    steps:
      - *attach_workspace
      - checkout
      - node/with-cache:
          cache-key: package-lock.json
          cache-version: v1
          steps:
            - run: npm install
      - run: *test
      - run: *build
      - run:
          name: 'Persist built files'
          command: |
            set -exu
            mv build /tmp/workspace/
            mv node_modules /tmp/workspace/
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build/*
            - node_modules/*

  tag:
    docker:
      - image: google/cloud-sdk:alpine
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD
    steps:
      - *attach_workspace
      - checkout
      - run: *create-image-version
      - run: *tag-git-version
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ./version

workflows:
  'Build Pipeline':
    jobs:
      - build
      - tag:
          context: global
          filters:
            branches:
              only: master
      - docker-publish/publish:
          context: global
          filters:
            branches:
              only: master
          requires:
            - build
            - tag
          image: $CIRCLE_PROJECT_REPONAME
          tag: $VERSION
          registry: $DOCKER_REGISTRY
          before_build:
            - *attach_workspace
            - run: *read-image-version
            - run: |
                mv /tmp/workspace/build .
                mv /tmp/workspace/node_modules .